def half_to_full_punctuation(text):  
    # 定义半角到全角的标点符号映射  
    half_to_full_map = {  
        ',': '，',  
        '.': '。',  
        ':': '：',  
        ';': '；',  
        '\'': '‘',  
        '’': '’',  
        '“': '“',  
        '”': '”',  
        '？': '？',  
        '！': '！',  
        '（': '（',  
        '）': '）',  
        '【': '【',  
        '】': '】',  
        '《': '《',  
        '》': '》',  
        '，': '，',  
        '．': '．',  
        '、': '、',  
        '：': '：',  
        '；': '；',  
        '‘': '‘',  
        '’': '’',  
        '“': '“',  
        '”': '”',  
        '《': '《',  
        '》': '》',  
        '『': '『',  
        '』': '』',  
        '【': '【',  
        '】': '】',  
        '─': '—',  
        '‒': '–',  
        '—': '—',  
        '～': '～',  
        '∕': '／',  
        '…': '…',  
        '‰': '‰',  
        '′': '′',  
        '″': '″',  
        '℃': '℃',  
        '￥': '￥',  
        '＄': '$',  
        '￡': '£',  
        '％': '%',  
        '＋': '+',  
        '－': '-',  
        '＝': '=',  
        '＜': '<',  
        '＞': '>',  
        '＃': '#',  
        '＆': '&',  
        '＊': '*',  
        '＠': '@',  
        '！': '！',  
        '！': '！',  
        '！': '！',  # 注意：这里有个重复，实际使用时请删除或修正  
        '／': '／',  
        '＼': '\\',  
        '｜': '|',  
        '｛': '{',  
        '｝': '}',  
        '〔': '【',  # 注意：这里将〔映射为【，根据实际需求可能需要调整  
        '〕': '】',  
        '〖': '〖',  
        '〗': '〗',  
        '━': '━',  
        '━': '━',  # 注意：这里有个重复，实际使用时请删除或修正  
    }  
      
    # 遍历文本，替换半角标点符号为全角  
    for half_punc, full_punc in half_to_full_map.items():  
        text = text.replace(half_punc, full_punc)  
      
    return text  
  
# 示例  
text = "BERT (Bidirectional Encoder Representations from Transformers) 是由 Google 在 2018 年提出的一种用于自然语言处理的预训练模型,BERT 采用双向 Transformer 架构,能够通过查看上下文来理解每个词的含义.这种双向性使得 BERT 能够在多个 NLP 任务中表现出色,包括问答、文本分类、命名实体识别等."  
converted_text = half_to_full_punctuation(text)  
print(converted_text)